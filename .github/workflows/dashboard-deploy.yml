name: Deploy dashboard

on:
  push:
    branches: [main]
    paths:
      - visualize/**
      - .github/workflows/dashboard-deploy.yml

env:
  RESOURCE_GROUP: "cosmosdb_ontologypoc_manish"
  COSMOS_ACCOUNT_NAME: "ontologypoc"
  COSMOS_DB_NAME: "ontology_nn"
  COSMOS_GRAPH_COLLECTION: "graphnn7"
  #SEARCH_RESOURCE_GROUP: "demo-rg-01"
  #SEARCH_SERVICE_NAME: "ssattiraju-search-01"
  AZURE_CONTAINER_REGISTRY: "ontologypoc"
  #SEARCH_INDEX: "cosmosdb-index"
  #STREAMLIT_SERVER_PORT: 8888
  #STREAMLIT_SERVER_HEADLESS: "true"

jobs:
  dashboard-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Get keys"
        id: get_keys
        run: |
          echo "##[set-output name=COSMOS_KEY;]$(az cosmosdb keys list --name ${{ env.COSMOS_ACCOUNT_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query primaryMasterKey --output tsv)"

          echo "##[set-output name=COSMOS_ENDPOINT;]$(az cosmosdb keys list --type connection-strings --name ${{ env.COSMOS_ACCOUNT_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query 'connectionStrings[0].connectionString' | awk -F'[=/]' '{print $4}' | sed 's/.documents./.gremlin.cosmos./')"

          echo "##[set-output name=SEARCH_KEY;]$(az search admin-key show --resource-group ${{ env.SEARCH_RESOURCE_GROUP }} --service-name ${{ env.SEARCH_SERVICE_NAME }} --query primaryKey --output tsv)"

          echo "##[set-output name=SEARCH_ENDPOINT;]$(http://${{ env.SEARCH_SERVICE_NAME }}.search.windows.net)"

          echo "##[set-output name=REGISTRY_USERNAME;]$(az acr credential show --name ${{ env.AZURE_CONTAINER_REGISTRY }} --query 'username' --output tsv)"

          echo "##[set-output name=REGISTRY_PASSWORD;]$(az acr credential show --name ${{ env.AZURE_CONTAINER_REGISTRY }} --query 'passwords[0].value' --output tsv)"

      - name: "Check out code"
        uses: actions/checkout@v2

      - name: "Login to ACR"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{  steps.get_keys.outputs.REGISTRY_USERNAME }}
          password: ${{  steps.get_keys.outputs.REGISTRY_PASSWORD }}

      - name: "Build image"
        run: |
          cd $GITHUB_WORKSPACE/visualize
          docker build . -t ${{ env.AZURE_CONTAINER_REGISTRY }}/cosmosgraphdemo:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/cosmosgraphdemo:${{ github.sha }}

      - name: "Deploy to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          dns-name-label: cosmosgraphdemo
          image: ${{ env.AZURE_CONTAINER_REGISTRY }}/cosmosgraphdemo:${{ github.sha }}
          cpu: 1 #Optional
          memory: 1.5 #Optional
          registry-username: ${{ steps.get_keys.outputs.REGISTRY_USERNAME }}
          registry-password: ${{ steps.get_keys.outputs.REGISTRY_PASSWORD }}
          name: cosmosgraphdemo
          location: "southeast asia"
          ports: ${{ env.STREAMLIT_SERVER_PORT }}
          secure-environment-variables: COSMOS_DATABASE=${{ env.COSMOS_DB_NAME }} COSMOS_GRAPH_COLLECTION=${{ env.COSMOS_GRAPH_COLLECTION }} COSMOS_KEY=${{ steps.get_keys.outputs.COSMOS_KEY }} COSMOS_ENDPOINT=${{ steps.get_keys.outputs.COSMOS_ENDPOINT }} SEARCH_KEY=${{ steps.get_keys.outputs.SEARCH_KEY }} SEARCH_INDEX=${{ env.SEARCH_INDEX }} SEARCH_ENDPOINT=https://${{ env.SEARCH_SERVICE_NAME }}.search.windows.net STREAMLIT_SERVER_PORT=${{ env.STREAMLIT_SERVER_PORT }} STREAMLIT_SERVER_HEADLESS=${{ env.STREAMLIT_SERVER_HEADLESS }}

      - name: "Azure logout"
        run: |
          az logout
